{"version":3,"sources":["init.js","controllers/application.controller.js","controllers/cat_index.controller.js","controllers/cat_new.controller.js","controllers/user_new.controller.js","main.js"],"names":["BASE_URL","window","reqKitConstants","catTemplate","fmTemplate","ApiCatIndex","ApiCatCreate","ApiEmotionIndex","ApiUserCreate","ApiKey","reqKitControllers","application","flashMessageContainer","flashMessageText","fetchEmotions","$","ajax","method","contentType","headers","Authorization","populateEmotionsSelect","destination","defaultText","showBlankOption","options","this","then","emotions","_items","map","emo","name","html","fetchFlashMessageTemplate","get","template","prepend","_","bind","updateFlashMessage","msg","type","text","parent","removeClass","addClass","setTimeout","console","log","dismissFlashMessage","catIndex","extend","catPrototype","emotion","url","cats","emotionSelector","catContainer","initialize","fetchTemplate","done","data","fadeIn","generateCat","attrs","Object","create","fetchCats","buildCatArray","catJson","cat","populateCatContainer","results","domCats","join","update","catNew","fieldUrl","fieldEmotion","fieldCredit","fieldApiKey","savedCats","postCatData","JSON","stringify","dataType","processData","handleSubmit","val","credit","attr","push","fadeOut","err","status","userNew","form","fieldEmail","fieldSubmit","fieldSubmitIcon","apiKeyContainer","apiKeySpan","apiKey","requestKey","updateState","state","slideUp","removeAttr","email","response","api_key","alert","percentext","width","maxFontSize","on"],"mappings":"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","file":"app.js","sourcesContent":["// The first JS file loaded.\n(function() {\n  var BASE_URL = 'http://requestkittens.com';\n\n  window.reqKitConstants = {\n    catTemplate:      '/templates/cat.template.html',\n    fmTemplate:       '/templates/flash_message.template.html',\n    ApiCatIndex:      BASE_URL+'/cats',\n    ApiCatCreate:     BASE_URL+'/cats',\n    ApiEmotionIndex:  BASE_URL+'/emotions',\n    ApiUserCreate:    BASE_URL+'/users',\n    ApiKey:           '7d791ff16add503b2542c23afb3aeab0'\n  };\n\n  window.reqKitControllers = {};\n}());","// A series of helper methods that can be used by all other controllers,\n// through concatenative inheritance.\nwindow.reqKitControllers.application = {\n  \n  flashMessageContainer:  \"#flash-message\",\n  flashMessageText:       \"#flash-message h4\",\n\n  fetchEmotions: function() {\n    return $.ajax(window.reqKitConstants.ApiEmotionIndex, {\n      method: 'GET',\n      contentType: \"application/json\",\n      headers: {\n        'Authorization': window.reqKitConstants.ApiKey\n      }\n    });\n  },\n  populateEmotionsSelect: function(destination, defaultText, showBlankOption) {\n    var options = showBlankOption ? \"<option>\"+defaultText+\"</option>\" : \"\";\n\n    return this.fetchEmotions()\n    .then(function(emotions) {\n      options += emotions._items.map(function(emo) {\n        return \"<option value='\"+ emo.name +\"'>\"+ emo.name +\"</option>\";\n      });\n\n      $(destination).html(options);\n    });\n  },\n\n  fetchFlashMessageTemplate: function() {\n    return $.get( window.reqKitConstants.fmTemplate, function(template) {\n      $(\"body\").prepend(_.template(template)());\n    }.bind(this), 'html');\n  },\n\n  updateFlashMessage: function(msg, type) {\n    // The idea with flash messages is they always exist, they're just hidden off-screen normally.\n    // We update the message, show it, wait a few seconds, and hide it.\n\n    $(this.flashMessageText)\n      .text(msg)\n      .parent()\n      .removeClass()\n      .addClass(\"visible \" + type);\n\n    // auto-hide it after a few seconds\n    window.setTimeout(function() {\n      console.log($(this.flashMessageContainer));\n      $(this.flashMessageContainer).removeClass(\"visible\");\n    }.bind(this), 5000);\n  },\n\n  dismissFlashMessage: function() {\n    $(this.flashMessageContainer).removeClass();\n  }\n\n};","window.reqKitControllers.catIndex = _.extend({}, window.reqKitControllers.application, {\n\n  catPrototype: {\n    emotion: null,\n    url:     null\n    // More stuff can be added here (photo source, custom behavior, etc)\n  },\n\n  cats: [],\n\n  emotionSelector: \"#select-emotion\",\n  catContainer:    \"#cat-container\",\n\n  initialize: function() {\n    this.cats = [];\n\n    this.fetchTemplate(window.reqKitConstants.catTemplate)\n    .done(function(data) { \n      this.template = _.template(data);\n    }.bind(this));\n\n    this.populateEmotionsSelect(this.emotionSelector, \"&nbsp;\", true)\n    .then(function() {\n      $(\"#demo h3\").fadeIn(500);\n    });\n  },\n\n  generateCat: function(attrs) {\n    return _.extend(Object.create(this.catPrototype), attrs);\n  },\n\n  /***** \n    Store our Cat template locally\n  ******/\n  fetchTemplate: function(url) {\n    return $.get( url, function(template) {\n      return template;\n    }.bind(this), 'html');\n  },\n\n  fetchCats: function(emotion) {\n    return $.ajax(window.reqKitConstants.ApiCatIndex, {\n      data: {\n        emotion: emotion\n      },\n      headers: {\n        'Authorization': window.reqKitConstants.ApiKey\n      }\n    });\n  },\n\n\n  /***** \n    Use our cat prototype to build an array of cat objects.\n    This adds custom behavior to the server data.\n  ******/\n  buildCatArray: function(catJson) {\n    console.log(this);\n    return catJson.map(function(cat) { \n\n      return this.generateCat(cat); \n    }.bind(this));\n  },\n\n  populateCatContainer: function(results) {\n    var domCats;\n\n    this.cats = this.buildCatArray(results._items);\n\n    // We have our cat data. Now we need to iterate through them creating templates with them.\n    domCats = this.cats.map(function(cat) {\n      return this.template(cat);\n    }.bind(this));\n\n    // Let's concatenate all those templates, and shove 'em in the DOM!\n    $(this.catContainer).html(domCats.join(\"\"));\n  },\n\n  /***** \n    Our main function. Triggered by the select menu, causes the view to update.\n  ******/\n  update: function(emotion) {\n    this.fetchCats(emotion)\n    .then(function(results) {\n      this.populateCatContainer(results);\n    }.bind(this));\n  }\n\n\n});\n","window.reqKitControllers.catNew = _.extend({}, window.reqKitControllers.application, {\n\n  // The CSS selectors for our various form fields\n  fieldUrl:     \"#field-url\",\n  fieldEmotion: \"#field-emotion\",\n  fieldCredit:  \"#field-credit\",\n  fieldApiKey:  \"#field-api-key\",\n\n  savedCats: [],\n\n  initialize: function() {\n    this.populateEmotionsSelect(this.fieldEmotion, \"select one\", true);\n  },\n\n  postCatData: function(data, headers) {\n    return $.ajax(window.reqKitConstants.ApiCatCreate, {\n      method:       'POST',\n      data:         JSON.stringify(data),\n      headers:      headers,\n      dataType:     'json',\n      contentType:  'application/json',\n      processData:  false\n    });\n  },\n\n  handleSubmit: function() {\n    var data = {\n      url:      $(this.fieldUrl).val(),\n      emotion:  $(this.fieldEmotion).val(),\n      credit:   $(this.fieldCredit).val()\n    };\n\n    var headers = {\n      'Authorization': $(this.fieldApiKey).val()\n    };\n\n    // We need to do something to ensure the user knows the request is in progress.\n    // For now, we're showing a black overlay and updating the submit button.\n    $(\".black-overlay\").fadeIn(200);\n    $(\".submit\").addClass(\"in-progress\").text(\"Submitting...\");\n\n\n\n    if ( !$(this.fieldEmotion + \" option:selected\").attr(\"value\")) {\n      this.updateFlashMessage(\"Please select an emotion\", \"alert\");\n      return false;\n    }\n\n    this.postCatData(data, headers)\n    .then(function(results) {\n      this.savedCats.push(results);\n\n      // Remove visual cues\n      $(\".black-overlay\").fadeOut(200);\n      $(\".submit\").removeClass(\"in-progress\").text(\"Submit Photo\");\n\n      // Clear form fields\n      $(\"#field-url, #field-credit, #field-emotion\").val(\"\");\n\n      // Display success message\n      this.updateFlashMessage(\"Successfully saved cat!\", \"success\");\n\n    }.bind(this), function(err) {\n      if (err.status === 401) {\n        this.updateFlashMessage(\"You need to be an administrator to add cats.\", \"alert\");\n      }\n      console.log(\"Oh no! Something bad happened:\", err);\n    }.bind(this));\n\n\n  }\n\n\n});\n","window.reqKitControllers.userNew = _.extend({}, window.reqKitControllers.application, {\n  form:             \"#request-api-key-form\",\n  fieldEmail:       \"#request-api-key-email\",\n  fieldSubmit:      \"#request-api-key-submit\",\n  fieldSubmitIcon:  \"#request-api-key-icon\",\n\n  apiKeyContainer:  \".api-key-container\",\n  apiKeySpan:       \".api-key\",\n\n  apiKey:           null,\n\n  initialize: function() {\n\n  },\n\n  requestKey: function(data) {\n    return $.ajax(window.reqKitConstants.ApiUserCreate, {\n      method: \"POST\",\n      data: JSON.stringify(data),\n      contentType: \"application/json\"\n    });\n  },\n\n  updateState: function(state) {\n    if ( state === \"processing\" ) {\n      $(this.fieldEmail).addClass(\"shrunken\");\n      $(this.fieldSubmit).addClass(\"sending\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-chevron-right\").addClass(\"fa-cog fa-spin\");\n    } else if ( state === \"error\" ) {\n      $(this.fieldEmail).val(\"\");\n      $(this.fieldSubmit).addClass(\"error\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-cog fa-spin\").addClass(\"fa-times\");\n      window.setTimeout(function() { this.updateState(\"default\"); }.bind(this), 3000);\n    } else if ( state === \"completed\" ) {\n      $(this.fieldSubmit).addClass(\"completed\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-cog fa-spin\").addClass(\"fa-check\");\n      \n      window.setTimeout(function() {\n        $(this.form).slideUp(500);\n      }.bind(this), 1000);\n\n      window.setTimeout(function() {\n        $(this.apiKeyContainer).fadeIn(500);\n      }.bind(this), 1500);\n    } else if ( state === \"default\" ) {\n      $(this.fieldEmail).removeClass(\"shrunken\");\n      $(this.fieldSubmit).removeAttr(\"class\");\n      $(this.fieldSubmitIcon).attr(\"class\", \"fa fa-chevron-right\");\n    }\n  },\n\n  handleSubmit: function() {\n    var data = {\n      email: $(this.fieldEmail).val()\n    };\n\n    if ( !data.email ) {\n      alert(\"We require an email, silly!\");\n      return false;\n    }\n\n    // visual cues - change submit style and submit icon contents\n    this.updateState(\"processing\");\n\n    this.requestKey(data)\n    .then(function(response) {\n      this.apiKey = response.api_key;\n      $(this.apiKeySpan).text(this.apiKey);\n\n      this.updateState(\"completed\");\n    }.bind(this), function(err) {\n      this.updateFlashMessage(\"Something went wrong T_T\", \"alert\");\n      this.updateState(\"error\");\n    }.bind(this));\n  }\n\n});","// Main application logic goes here!\n$(\"header.full-ver h2\").percentext({width: 75, maxFontSize: 130});\n$(\"header.full-ver h5\").percentext({width: 78, maxFontSize: 36});\n\n$(\"header.smaller-ver h2\").percentext({width: 50, maxFontSize: 100});\n$(\"header.smaller-ver h5\").percentext({width: 55, maxFontSize: 30});\n\n// Tie the 'update' function on the Select change\n$(\"#select-emotion\").on(\"change\", function() {\n  $(\"section#demo\").addClass(\"has-cats\");\n  \n  var emotion = $(this).val();\n  window.reqKitControllers.catIndex.update(emotion);\n});\n\n"],"sourceRoot":"/source/"}