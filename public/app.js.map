{"version":3,"sources":["init.js","controllers/application.controller.js","controllers/cat_index.controller.js","controllers/cat_new.controller.js","controllers/user_new.controller.js","main.js"],"names":["BASE_URL","window","reqKitConstants","catTemplate","fmTemplate","ApiCatIndex","ApiCatCreate","ApiEmotionIndex","ApiUserCreate","ApiKey","reqKitControllers","application","flashMessageContainer","flashMessageText","fetchEmotions","$","ajax","method","contentType","headers","Authorization","populateEmotionsSelect","destination","defaultText","showBlankOption","options","this","then","emotions","_items","map","emo","name","html","populateEmotionsList","emos","emoLis","fetchFlashMessageTemplate","get","template","prepend","_","bind","updateFlashMessage","msg","type","text","parent","removeClass","addClass","setTimeout","console","log","dismissFlashMessage","catIndex","extend","catPrototype","emotion","url","cats","emotionSelector","catContainer","initialize","fetchTemplate","done","data","fadeIn","generateCat","attrs","Object","create","fetchCats","buildCatArray","catJson","cat","populateCatContainer","results","domCats","join","update","catNew","fieldUrl","fieldEmotion","fieldCredit","fieldApiKey","savedCats","postCatData","JSON","stringify","dataType","processData","handleSubmit","val","credit","attr","push","fadeOut","err","status","userNew","form","fieldEmail","fieldSubmit","fieldSubmitIcon","apiKeyContainer","apiKeySpan","apiKey","requestKey","updateState","state","slideUp","removeAttr","email","response","api_key","alert","percentext","width","maxFontSize","on"],"mappings":"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","file":"app.js","sourcesContent":["// The first JS file loaded.\n(function() {\n  var BASE_URL = 'http://requestkittens.com';\n\n  window.reqKitConstants = {\n    catTemplate:      'http://localhost:8000/templates/cat.template.html',\n    fmTemplate:       'http://localhost:8000/templates/flash_message.template.html',\n    ApiCatIndex:      BASE_URL+'/cats',\n    ApiCatCreate:     BASE_URL+'/cats',\n    ApiEmotionIndex:  BASE_URL+'/emotions',\n    ApiUserCreate:    BASE_URL+'/users',\n    ApiKey:           '7d791ff16add503b2542c23afb3aeab0'\n  };\n\n  window.reqKitControllers = {};\n}());","// A series of helper methods that can be used by all other controllers,\n// through concatenative inheritance.\nwindow.reqKitControllers.application = {\n  \n  flashMessageContainer:  \"#flash-message\",\n  flashMessageText:       \"#flash-message h4\",\n\n  fetchEmotions: function() {\n    return $.ajax(window.reqKitConstants.ApiEmotionIndex, {\n      method: 'GET',\n      contentType: \"application/json\",\n      headers: {\n        'Authorization': window.reqKitConstants.ApiKey\n      }\n    });\n  },\n  populateEmotionsSelect: function(destination, defaultText, showBlankOption) {\n    var options = showBlankOption ? \"<option>\"+defaultText+\"</option>\" : \"\";\n\n    return this.fetchEmotions()\n    .then(function(emotions) {\n      options += emotions._items.map(function(emo) {\n        return \"<option value='\"+ emo.name +\"'>\"+ emo.name +\"</option>\";\n      });\n\n      $(destination).html(options);\n\n      return emotions;\n    });\n  },\n\n  populateEmotionsList: function(emos, destination) {\n    var emoLis = \"\";\n\n    emoLis += emos._items.map(function(emo) {\n      return \"<li>\"+ emo.name +\"</li>\";\n    });\n\n    return $(destination).html(emoLis);\n  },\n\n  fetchFlashMessageTemplate: function() {\n\n    return $.get( window.reqKitConstants.fmTemplate, function(template) {\n      $(\"body\").prepend(_.template(template)());\n    }.bind(this), 'html');\n  },\n\n  updateFlashMessage: function(msg, type) {\n    // The idea with flash messages is they always exist, they're just hidden off-screen normally.\n    // We update the message, show it, wait a few seconds, and hide it.\n\n    $(this.flashMessageText)\n      .text(msg)\n      .parent()\n      .removeClass()\n      .addClass(\"visible \" + type);\n\n    // auto-hide it after a few seconds\n    window.setTimeout(function() {\n      console.log($(this.flashMessageContainer));\n      $(this.flashMessageContainer).removeClass(\"visible\");\n    }.bind(this), 5000);\n  },\n\n  dismissFlashMessage: function() {\n    $(this.flashMessageContainer).removeClass();\n  }\n\n};","window.reqKitControllers.catIndex = _.extend({}, window.reqKitControllers.application, {\n\n  catPrototype: {\n    emotion: null,\n    url:     null\n    // More stuff can be added here (photo source, custom behavior, etc)\n  },\n\n  cats: [],\n\n  emotionSelector: \"#select-emotion\",\n  catContainer:    \"#cat-container\",\n\n  initialize: function() {\n    this.cats = [];\n\n    this.fetchTemplate(window.reqKitConstants.catTemplate)\n    .done(function(data) { \n      this.template = _.template(data);\n    }.bind(this));\n\n    this.populateEmotionsSelect(this.emotionSelector, \"&nbsp;\", true)\n    .then(function(emos) {\n      console.log(\"populating ul with\", emos);\n      return this.populateEmotionsList(emos, \".list-of-emotions\");\n    }.bind(this))\n    .then(function() {\n      console.log(\"Fading in h3\");\n      $(\"#demo h3\").fadeIn(500);\n    });\n  },\n\n  generateCat: function(attrs) {\n    return _.extend(Object.create(this.catPrototype), attrs);\n  },\n\n  /***** \n    Store our Cat template locally\n  ******/\n  fetchTemplate: function(url) {\n    return $.get( url, function(template) {\n      return template;\n    }.bind(this), 'html');\n  },\n\n  fetchCats: function(emotion) {\n    return $.ajax(window.reqKitConstants.ApiCatIndex, {\n      data: {\n        emotion: emotion\n      },\n      headers: {\n        'Authorization': window.reqKitConstants.ApiKey\n      }\n    });\n  },\n\n\n  /***** \n    Use our cat prototype to build an array of cat objects.\n    This adds custom behavior to the server data.\n  ******/\n  buildCatArray: function(catJson) {\n    console.log(this);\n    return catJson.map(function(cat) { \n\n      return this.generateCat(cat); \n    }.bind(this));\n  },\n\n  populateCatContainer: function(results) {\n    var domCats;\n\n    this.cats = this.buildCatArray(results._items);\n\n    // We have our cat data. Now we need to iterate through them creating templates with them.\n    domCats = this.cats.map(function(cat) {\n      return this.template(cat);\n    }.bind(this));\n\n    // Let's concatenate all those templates, and shove 'em in the DOM!\n    $(this.catContainer).html(domCats.join(\"\"));\n  },\n\n  /***** \n    Our main function. Triggered by the select menu, causes the view to update.\n  ******/\n  update: function(emotion) {\n    this.fetchCats(emotion)\n    .then(function(results) {\n      this.populateCatContainer(results);\n    }.bind(this));\n  }\n\n\n});\n","window.reqKitControllers.catNew = _.extend({}, window.reqKitControllers.application, {\n\n  // The CSS selectors for our various form fields\n  fieldUrl:     \"#field-url\",\n  fieldEmotion: \"#field-emotion\",\n  fieldCredit:  \"#field-credit\",\n  fieldApiKey:  \"#field-api-key\",\n\n  savedCats: [],\n\n  initialize: function() {\n    this.populateEmotionsSelect(this.fieldEmotion, \"select one\", true);\n  },\n\n  postCatData: function(data, headers) {\n    return $.ajax(window.reqKitConstants.ApiCatCreate, {\n      method:       'POST',\n      data:         JSON.stringify(data),\n      headers:      headers,\n      dataType:     'json',\n      contentType:  'application/json',\n      processData:  false\n    });\n  },\n\n  handleSubmit: function() {\n    var data = {\n      url:      $(this.fieldUrl).val(),\n      emotion:  $(this.fieldEmotion).val(),\n      credit:   $(this.fieldCredit).val()\n    };\n\n    var headers = {\n      'Authorization': $(this.fieldApiKey).val()\n    };\n\n    // We need to do something to ensure the user knows the request is in progress.\n    // For now, we're showing a black overlay and updating the submit button.\n    $(\".black-overlay\").fadeIn(200);\n    $(\".submit\").addClass(\"in-progress\").text(\"Submitting...\");\n\n\n\n    if ( !$(this.fieldEmotion + \" option:selected\").attr(\"value\")) {\n      this.updateFlashMessage(\"Please select an emotion\", \"alert\");\n      return false;\n    }\n\n    this.postCatData(data, headers)\n    .then(function(results) {\n      this.savedCats.push(results);\n\n      // Remove visual cues\n      $(\".black-overlay\").fadeOut(200);\n      $(\".submit\").removeClass(\"in-progress\").text(\"Submit Photo\");\n\n      // Clear form fields\n      $(\"#field-url, #field-credit, #field-emotion\").val(\"\");\n\n      // Display success message\n      this.updateFlashMessage(\"Successfully saved cat!\", \"success\");\n\n    }.bind(this), function(err) {\n      if (err.status === 401) {\n        this.updateFlashMessage(\"You need to be an administrator to add cats.\", \"alert\");\n      }\n      console.log(\"Oh no! Something bad happened:\", err);\n    }.bind(this));\n\n\n  }\n\n\n});\n","window.reqKitControllers.userNew = _.extend({}, window.reqKitControllers.application, {\n  form:             \"#request-api-key-form\",\n  fieldEmail:       \"#request-api-key-email\",\n  fieldSubmit:      \"#request-api-key-submit\",\n  fieldSubmitIcon:  \"#request-api-key-icon\",\n\n  apiKeyContainer:  \".api-key-container\",\n  apiKeySpan:       \".api-key\",\n\n  apiKey:           null,\n\n  initialize: function() {\n\n  },\n\n  requestKey: function(data) {\n    return $.ajax(window.reqKitConstants.ApiUserCreate, {\n      method: \"POST\",\n      data: JSON.stringify(data),\n      contentType: \"application/json\"\n    });\n  },\n\n  updateState: function(state) {\n    if ( state === \"processing\" ) {\n      $(this.fieldEmail).addClass(\"shrunken\");\n      $(this.fieldSubmit).addClass(\"sending\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-chevron-right\").addClass(\"fa-cog fa-spin\");\n    } else if ( state === \"error\" ) {\n      $(this.fieldEmail).val(\"\");\n      $(this.fieldSubmit).addClass(\"error\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-cog fa-spin\").addClass(\"fa-times\");\n      window.setTimeout(function() { this.updateState(\"default\"); }.bind(this), 3000);\n    } else if ( state === \"completed\" ) {\n      $(this.fieldSubmit).addClass(\"completed\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-cog fa-spin\").addClass(\"fa-check\");\n      \n      window.setTimeout(function() {\n        $(this.form).slideUp(500);\n      }.bind(this), 1000);\n\n      window.setTimeout(function() {\n        $(this.apiKeyContainer).fadeIn(500);\n      }.bind(this), 1500);\n    } else if ( state === \"default\" ) {\n      $(this.fieldEmail).removeClass(\"shrunken\");\n      $(this.fieldSubmit).removeAttr(\"class\");\n      $(this.fieldSubmitIcon).attr(\"class\", \"fa fa-chevron-right\");\n    }\n  },\n\n  handleSubmit: function() {\n    var data = {\n      email: $(this.fieldEmail).val()\n    };\n\n    if ( !data.email ) {\n      alert(\"We require an email, silly!\");\n      return false;\n    }\n\n    // visual cues - change submit style and submit icon contents\n    this.updateState(\"processing\");\n\n    this.requestKey(data)\n    .then(function(response) {\n      this.apiKey = response.api_key;\n      $(this.apiKeySpan).text(this.apiKey);\n\n      this.updateState(\"completed\");\n    }.bind(this), function(err) {\n      this.updateFlashMessage(\"Something went wrong T_T\", \"alert\");\n      this.updateState(\"error\");\n    }.bind(this));\n  }\n\n});","// Main application logic goes here!\n$(\"header.full-ver h2\").percentext({width: 75, maxFontSize: 130});\n$(\"header.full-ver h5\").percentext({width: 78, maxFontSize: 36});\n\n$(\"header.smaller-ver h2\").percentext({width: 50, maxFontSize: 100});\n$(\"header.smaller-ver h5\").percentext({width: 55, maxFontSize: 30});\n\n// Tie the 'update' function on the Select change\n$(\"#select-emotion\").on(\"change\", function() {\n  $(\"section#demo\").addClass(\"has-cats\");\n  \n  var emotion = $(this).val();\n  window.reqKitControllers.catIndex.update(emotion);\n});\n\n"],"sourceRoot":"/source/"}