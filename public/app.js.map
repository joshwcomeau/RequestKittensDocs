{"version":3,"sources":["init.js","controllers/application.controller.js","controllers/cat_index.controller.js","controllers/cat_new.controller.js","controllers/user_new.controller.js","main.js"],"names":["developmentMode","BASE_URL","window","reqKitConstants","catIndexTemplate","catShowTemplate","fmTemplate","ApiCatIndex","ApiCatCreate","ApiEmotionIndex","ApiUserCreate","ApiKey","reqKitControllers","$","prepend","application","flashMessageContainer","flashMessageText","fetchEmotions","ajax","method","contentType","headers","Authorization","populateEmotionsSelect","destination","defaultText","showBlankOption","options","this","then","emotions","_items","map","emo","name","html","populateEmotionsList","emos","emoLis","join","fetchFlashMessageTemplate","get","template","_","bind","updateFlashMessage","msg","type","text","parent","removeClass","addClass","setTimeout","console","log","dismissFlashMessage","catIndex","extend","catPrototype","emotion","url","cats","cat","emotionSelector","catContainer","initialize","fetchTemplate","done","data","indexTemplate","showTemplate","fadeIn","generateCat","attrs","Object","create","fetchCats","optsString","buildCatArray","catJson","populateCatContainer","results","domCats","update","viewCat","id","newCatModal","find","closeCat","remove","catNew","fieldUrl","fieldEmotion","fieldOwner","fieldApiKey","savedCats","postCatData","JSON","stringify","dataType","processData","handleSubmit","val","owner","attr","push","fadeOut","err","status","userNew","form","fieldEmail","fieldSubmit","fieldSubmitIcon","apiKeyContainer","apiKeySpan","apiKey","requestKey","updateState","state","slideUp","removeAttr","email","response","api_key","alert","percentext","width","maxFontSize","on"],"mappings":"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","file":"app.js","sourcesContent":["// The first JS file loaded.\n\n\n(function() {\n  var developmentMode = true;\n\n  var BASE_URL = developmentMode ? 'http://localhost:3000' : 'http://requestkittens.com';\n\n  window.reqKitConstants = {\n    catIndexTemplate: developmentMode ? '/templates/cat_index.template.html'     : '/RequestKittensDocs/public/templates/cat_index.template.html',\n    catShowTemplate:  developmentMode ? '/templates/cat_show.template.html'      : '/RequestKittensDocs/public/templates/cat_show.template.html',\n    fmTemplate:       developmentMode ? '/templates/flash_message.template.html' : '/RequestKittensDocs/public/templates/flash_message.template.html',\n    ApiCatIndex:      BASE_URL+'/cats',\n    ApiCatCreate:     BASE_URL+'/cats',\n    ApiEmotionIndex:  BASE_URL+'/emotions',\n    ApiUserCreate:    BASE_URL+'/users',\n    ApiKey:           '7d791ff16add503b2542c23afb3aeab0'\n  };\n\n  window.reqKitControllers = {};\n\n  if (!developmentMode) {\n    // Add our <base> tag to the top of our <head>\n    $(\"head\").prepend('<base href=\"http://joshwcomeau.github.io/RequestKittensDocs/public/\">');\n  }\n}());","// A series of helper methods that can be used by all other controllers,\n// through concatenative inheritance.\nwindow.reqKitControllers.application = {\n  \n  flashMessageContainer:  \"#flash-message\",\n  flashMessageText:       \"#flash-message h4\",\n\n  fetchEmotions: function() {\n    return $.ajax(window.reqKitConstants.ApiEmotionIndex, {\n      method: 'GET',\n      contentType: \"application/json\",\n      headers: {\n        'Authorization': window.reqKitConstants.ApiKey\n      }\n    });\n  },\n  populateEmotionsSelect: function(destination, defaultText, showBlankOption) {\n    var options = showBlankOption ? \"<option>\"+defaultText+\"</option>\" : \"\";\n\n    return this.fetchEmotions()\n    .then(function(emotions) {\n      options += emotions._items.map(function(emo) {\n        return \"<option value='\"+ emo.name +\"'>\"+ emo.name +\"</option>\";\n      });\n\n      $(destination).html(options);\n\n      return emotions;\n    });\n  },\n\n  populateEmotionsList: function(emos, destination) {\n    var emoLis = \"\";\n\n    emoLis += emos._items.map(function(emo) {\n      return \"<li>\"+ emo.name +\"</li>\";\n    }).join(\"\");\n\n    return $(destination).html(emoLis);\n  },\n\n  fetchFlashMessageTemplate: function() {\n\n    return $.get( window.reqKitConstants.fmTemplate, function(template) {\n      $(\"body\").prepend(_.template(template)());\n    }.bind(this), 'html');\n  },\n\n  updateFlashMessage: function(msg, type) {\n    // The idea with flash messages is they always exist, they're just hidden off-screen normally.\n    // We update the message, show it, wait a few seconds, and hide it.\n\n    $(this.flashMessageText)\n      .text(msg)\n      .parent()\n      .removeClass()\n      .addClass(\"visible \" + type);\n\n    // auto-hide it after a few seconds\n    window.setTimeout(function() {\n      console.log($(this.flashMessageContainer));\n      $(this.flashMessageContainer).removeClass(\"visible\");\n    }.bind(this), 5000);\n  },\n\n  dismissFlashMessage: function() {\n    $(this.flashMessageContainer).removeClass();\n  }\n\n};","window.reqKitControllers.catIndex = _.extend({}, window.reqKitControllers.application, {\n\n  catPrototype: {\n    emotion: null,\n    url:     null\n    // More stuff can be added here (photo source, custom behavior, etc)\n  },\n\n  cats: [],\n  cat: null,\n\n  emotionSelector: \"#select-emotion\",\n  catContainer:    \"#cat-container\",\n\n  initialize: function() {\n    this.cats = [];\n\n    // Pre-fetch our cat Index template (repeated 4 times when the user selects an emotion)\n    this.fetchTemplate(window.reqKitConstants.catIndexTemplate)\n    .done(function(data) { \n      this.indexTemplate = _.template(data);\n    }.bind(this));\n\n    // Pre-fetch our cat Show template (shown in a modal when the user clicks one of the 4 cats)\n    this.fetchTemplate(window.reqKitConstants.catShowTemplate)\n    .done(function(data) { \n      this.showTemplate = _.template(data);\n    }.bind(this));\n\n    this.populateEmotionsSelect(this.emotionSelector, \"&nbsp;\", true)\n    .then(function(emos) {\n      return this.populateEmotionsList(emos, \".list-of-emotions\");\n    }.bind(this))\n    .then(function() {\n      $(\"#demo h3\").fadeIn(500);\n    });\n  },\n\n  generateCat: function(attrs) {\n    return _.extend(Object.create(this.catPrototype), attrs);\n  },\n\n  /***** \n    Store our Cat template locally\n  ******/\n  fetchTemplate: function(url) {\n    return $.get( url, function(template) {\n      return template;\n    }.bind(this), 'html');\n  },\n\n  fetchCats: function(emotion) {\n    var optsString = \"?numOfResults=4&imageSize=all\";\n\n    return $.ajax(window.reqKitConstants.ApiCatIndex+optsString, {\n      data: {\n        emotion: emotion\n      },\n      headers: {\n        'Authorization': window.reqKitConstants.ApiKey\n      }\n    });\n  },\n\n\n  /***** \n    Use our cat prototype to build an array of cat objects.\n    This adds custom behavior to the server data.\n  ******/\n  buildCatArray: function(catJson) {\n    console.log(this);\n    return catJson.map(function(cat) { \n\n      return this.generateCat(cat); \n    }.bind(this));\n  },\n\n  populateCatContainer: function(results) {\n    var domCats;\n\n    this.cats = this.buildCatArray(results._items);\n\n    // We have our cat data. Now we need to iterate through them creating templates with them.\n    domCats = this.cats.map(function(cat) {\n      return this.indexTemplate(cat);\n    }.bind(this));\n\n    // Let's concatenate all those templates, and shove 'em in the DOM!\n    $(this.catContainer).html(domCats.join(\"\"));\n\n    console.log(this.cats);\n  },\n\n  /***** \n    Our main function. Triggered by the select menu, causes the view to update.\n  ******/\n  update: function(emotion) {\n    this.fetchCats(emotion)\n    .then(function(results) {\n      this.populateCatContainer(results);\n    }.bind(this));\n  },\n\n  viewCat: function(id) {\n    var newCatModal;\n\n    // First, find the selected cat in our cats array\n    this.cat = _.find(this.cats, function(cat) {\n      return cat.id === id;\n    });\n\n    // Update the template with these new values\n    newCatModal = this.showTemplate(this.cat);\n\n    $(\"body\").prepend(newCatModal);\n\n    // Do some annoying jiggling to get the inner modal div to take up the same width as the cat image.\n    window.setTimeout(function() {\n      // $(\".cat-modal\").width( $(\".cat-modal-image\").width() );\n      // $(\".cat-modal\").height( $(\".cat-modal-image\").height() );\n      $(\".modal-overlay, .cat-modal\").removeClass(\"invisible\");\n    }, 100);\n    \n  },\n\n  closeCat: function() {\n    $(\".modal-overlay, .cat-modal\").addClass(\"invisible\");\n    window.setTimeout(function() {\n      $(\".modal-overlay, .cat-modal\").remove();\n    }, 500);\n  }\n\n\n});\n","window.reqKitControllers.catNew = _.extend({}, window.reqKitControllers.application, {\n\n  // The CSS selectors for our various form fields\n  fieldUrl:     \"#field-url\",\n  fieldEmotion: \"#field-emotion\",\n  fieldOwner:   \"#field-owner\",\n  fieldApiKey:  \"#field-api-key\",\n\n  savedCats: [],\n\n  initialize: function() {\n    this.populateEmotionsSelect(this.fieldEmotion, \"select one\", true);\n  },\n\n  postCatData: function(data, headers) {\n    return $.ajax(window.reqKitConstants.ApiCatCreate, {\n      method:       'POST',\n      data:         JSON.stringify(data),\n      headers:      headers,\n      dataType:     'json',\n      contentType:  'application/json',\n      processData:  false\n    });\n  },\n\n  handleSubmit: function() {\n    var data = {\n      url:      $(this.fieldUrl).val(),\n      emotion:  $(this.fieldEmotion).val(),\n      owner:   $(this.fieldOwner).val()\n    };\n\n    var headers = {\n      'Authorization': $(this.fieldApiKey).val()\n    };\n\n    // We need to do something to ensure the user knows the request is in progress.\n    // For now, we're showing a black overlay and updating the submit button.\n    $(\".black-overlay\").fadeIn(200);\n    $(\".submit\").addClass(\"in-progress\").text(\"Submitting...\");\n\n\n\n    if ( !$(this.fieldEmotion + \" option:selected\").attr(\"value\")) {\n      this.updateFlashMessage(\"Please select an emotion\", \"alert\");\n      return false;\n    }\n\n    this.postCatData(data, headers)\n    .then(function(results) {\n      this.savedCats.push(results);\n\n      // Remove visual cues\n      $(\".black-overlay\").fadeOut(200);\n      $(\".submit\").removeClass(\"in-progress\").text(\"Submit Photo\");\n\n      // Clear form fields\n      $(\"#field-url, #field-credit, #field-emotion\").val(\"\");\n\n      // Display success message\n      this.updateFlashMessage(\"Successfully saved cat!\", \"success\");\n\n    }.bind(this), function(err) {\n      if (err.status === 401) {\n        this.updateFlashMessage(\"You need to be an administrator to add cats.\", \"alert\");\n      }\n      console.log(\"Oh no! Something bad happened:\", err);\n    }.bind(this));\n\n\n  }\n\n\n});\n","window.reqKitControllers.userNew = _.extend({}, window.reqKitControllers.application, {\n  form:             \"#request-api-key-form\",\n  fieldEmail:       \"#request-api-key-email\",\n  fieldSubmit:      \"#request-api-key-submit\",\n  fieldSubmitIcon:  \"#request-api-key-icon\",\n\n  apiKeyContainer:  \".api-key-container\",\n  apiKeySpan:       \".api-key\",\n\n  apiKey:           null,\n\n  initialize: function() {\n\n  },\n\n  requestKey: function(data) {\n    return $.ajax(window.reqKitConstants.ApiUserCreate, {\n      method: \"POST\",\n      data: JSON.stringify(data),\n      contentType: \"application/json\"\n    });\n  },\n\n  updateState: function(state) {\n    if ( state === \"processing\" ) {\n      $(this.fieldEmail).addClass(\"shrunken\");\n      $(this.fieldSubmit).addClass(\"sending\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-chevron-right\").addClass(\"fa-cog fa-spin\");\n    } else if ( state === \"error\" ) {\n      $(this.fieldEmail).val(\"\");\n      $(this.fieldSubmit).addClass(\"error\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-cog fa-spin\").addClass(\"fa-times\");\n      window.setTimeout(function() { this.updateState(\"default\"); }.bind(this), 3000);\n    } else if ( state === \"completed\" ) {\n      $(this.fieldSubmit).addClass(\"completed\");\n      $(this.fieldSubmitIcon).removeClass(\"fa-cog fa-spin\").addClass(\"fa-check\");\n      \n      window.setTimeout(function() {\n        $(this.form).slideUp(500);\n      }.bind(this), 1000);\n\n      window.setTimeout(function() {\n        $(this.apiKeyContainer).fadeIn(500);\n      }.bind(this), 1500);\n    } else if ( state === \"default\" ) {\n      $(this.fieldEmail).removeClass(\"shrunken\");\n      $(this.fieldSubmit).removeAttr(\"class\");\n      $(this.fieldSubmitIcon).attr(\"class\", \"fa fa-chevron-right\");\n    }\n  },\n\n  handleSubmit: function() {\n    var data = {\n      email: $(this.fieldEmail).val()\n    };\n\n    if ( !data.email ) {\n      alert(\"We require an email, silly!\");\n      return false;\n    }\n\n    // visual cues - change submit style and submit icon contents\n    this.updateState(\"processing\");\n\n    this.requestKey(data)\n    .then(function(response) {\n      this.apiKey = response.api_key;\n      $(this.apiKeySpan).text(this.apiKey);\n\n      this.updateState(\"completed\");\n    }.bind(this), function(err) {\n      this.updateFlashMessage(\"Something went wrong T_T\", \"alert\");\n      this.updateState(\"error\");\n    }.bind(this));\n  }\n\n});","// Main application logic goes here!\n$(\"header.full-ver h2\").percentext({width: 75, maxFontSize: 130});\n$(\"header.full-ver h5\").percentext({width: 78, maxFontSize: 36});\n\n$(\"header.smaller-ver h2\").percentext({width: 50, maxFontSize: 100});\n$(\"header.smaller-ver h5\").percentext({width: 55, maxFontSize: 30});\n\n// Tie the 'update' function on the Select change\n$(\"#select-emotion\").on(\"change\", function() {\n  $(\"section#demo\").addClass(\"has-cats\");\n  \n  var emotion = $(this).val();\n  window.reqKitControllers.catIndex.update(emotion);\n});\n\n"],"sourceRoot":"/source/"}